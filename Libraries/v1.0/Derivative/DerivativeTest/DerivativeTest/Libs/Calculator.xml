<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Calculator</name>
    </assembly>
    <members>
        <member name="M:NumericalCalculator.Interior.ComputeInterior">
            <summary>
            Compute given formula
            </summary>
            <returns></returns>
        </member>
        <member name="M:NumericalCalculator.Interior.#ctor(System.String,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="function">Formula</param>
            <param name="x">Variable value</param>
            <param name="y">First order differential starting value. Used only for computing differentials.</param>
            <param name="u">Second order differential starting value. Used only for computing second order differential.</param>
        </member>
        <member name="M:NumericalCalculator.Calculator.Compute">
            <summary>
            Calculate given math
            </summary>
            <returns></returns>
        </member>
        <member name="M:NumericalCalculator.Proportions.Compute(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Compute proportion
            </summary>
            <param name="v1">First value. Put here double.NaN if this is your unknown value.</param>
            <param name="v2">Second value. Put here double.NaN if this is your unknown value.</param>
            <param name="v3">Third value. Put here double.NaN if this is your unknown value.</param>
            <param name="v4">Fourth value. Put here double.NaN if this is your unknown value.</param>
            <returns></returns>
        </member>
        <member name="M:NumericalCalculator.Mean.ComputeArithmetic(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Compute arithmetic mean
            </summary>
            <param name="values">Values for arithmetic mean computation</param>
            <returns></returns>
        </member>
        <member name="M:NumericalCalculator.Mean.ComputeWeighted(System.Collections.Generic.IEnumerable{System.Double[]})">
            <summary>
            Compute weighted mean
            </summary>
            <param name="values">List of one tables with two values. First is value, second is this value weight.</param>
            <returns></returns>
        </member>
    </members>
</doc>
